[{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://hehta.github.io/RESIDE/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://hehta.github.io/RESIDE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ryan Field. Author, maintainer. David McAllister. Author. Claudia Geue. Contributor.","code":""},{"path":"https://hehta.github.io/RESIDE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Field R, McAllister D (2024). RESIDE: Rapid Easy Synthesis Inform Data Extraction. R package version 0.2.1, https://hehta.github.io/RESIDE/.","code":"@Manual{,   title = {RESIDE: Rapid Easy Synthesis to Inform Data Extraction},   author = {Ryan Field and David McAllister},   year = {2024},   note = {R package version 0.2.1},   url = {https://hehta.github.io/RESIDE/}, }"},{"path":"https://hehta.github.io/RESIDE/index.html","id":"reside-rapid-easy-synthesis-to-inform-data-extraction","dir":"","previous_headings":"","what":"Rapid Easy Synthesis to Inform Data Extraction","title":"Rapid Easy Synthesis to Inform Data Extraction","text":"R package allows data simulation marginal distibutions obtained Trusted Research Environments (TREs).","code":""},{"path":"https://hehta.github.io/RESIDE/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Rapid Easy Synthesis to Inform Data Extraction","text":"Currently package can install using devtools remotes","code":""},{"path":"https://hehta.github.io/RESIDE/index.html","id":"devtools","dir":"","previous_headings":"","what":"Devtools","title":"Rapid Easy Synthesis to Inform Data Extraction","text":"","code":"install.packages(\"devtools\") devtools::install_github(\"hehta/RESIDE\")"},{"path":"https://hehta.github.io/RESIDE/index.html","id":"remotes","dir":"","previous_headings":"","what":"Remotes","title":"Rapid Easy Synthesis to Inform Data Extraction","text":"","code":"install.packages(\"remotes\") remotes::install_github(\"hehta/RESIDE\")"},{"path":[]},{"path":"https://hehta.github.io/RESIDE/index.html","id":"trusted-research-environments-tres","dir":"","previous_headings":"","what":"Trusted Research Environments (TRE’s)","title":"Rapid Easy Synthesis to Inform Data Extraction","text":"two main functions:","code":""},{"path":"https://hehta.github.io/RESIDE/index.html","id":"get_marginal_distributions","dir":"","previous_headings":"Trusted Research Environments (TRE’s)","what":"get_marginal_distributions","title":"Rapid Easy Synthesis to Inform Data Extraction","text":"function get marginal distributions store R object.","code":""},{"path":"https://hehta.github.io/RESIDE/index.html","id":"export_marginal_distributions","dir":"","previous_headings":"Trusted Research Environments (TRE’s)","what":"export_marginal_distributions","title":"Rapid Easy Synthesis to Inform Data Extraction","text":"function export marginal distributions csv files.","code":""},{"path":"https://hehta.github.io/RESIDE/index.html","id":"end-users","dir":"","previous_headings":"","what":"End Users","title":"Rapid Easy Synthesis to Inform Data Extraction","text":"obtained marginal distributions TRE, can import simulated data using following functions:","code":""},{"path":"https://hehta.github.io/RESIDE/index.html","id":"import_marginal_distributions","dir":"","previous_headings":"End Users","what":"import_marginal_distributions","title":"Rapid Easy Synthesis to Inform Data Extraction","text":"function import marginal distributions csv files provided TRE store R object.","code":""},{"path":"https://hehta.github.io/RESIDE/index.html","id":"synthesise_data","dir":"","previous_headings":"End Users","what":"synthesise_data","title":"Rapid Easy Synthesis to Inform Data Extraction","text":"function synthesise data base imported marginal distributions.","code":""},{"path":"https://hehta.github.io/RESIDE/index.html","id":"worked-example-using-the-internation-stroke-trial","dir":"","previous_headings":"","what":"Worked Example Using the Internation Stroke Trial","title":"Rapid Easy Synthesis to Inform Data Extraction","text":"following worked example using International Stroke Trial (IST) included dataset package ODC-licence.","code":"# Load the package library(RESIDE)  # Get the marginal distributions marginals <- get_marginal_distributions(IST)  # Export the marginal distributions export_marginal_distributions(marginals)  # Import the exported marginal distributions marginals_imported <- import_marginal_distributions()  # Synthesise data from the imported marginal distributions synthesise_data(marginals_imported)"},{"path":"https://hehta.github.io/RESIDE/reference/IST.html","id":null,"dir":"Reference","previous_headings":"","what":"IST Dataset — IST","title":"IST Dataset — IST","text":"International Stroke Trial Dataset","code":""},{"path":"https://hehta.github.io/RESIDE/reference/IST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IST Dataset — IST","text":"","code":"IST"},{"path":"https://hehta.github.io/RESIDE/reference/IST.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IST Dataset — IST","text":"data frame 19435 rows 112 columns: AGE Randomisation data: Age years CMPLASP data derived variables: Compliant aspirin CMPLHEP data derived variables: Compliant heparin CNTRYNUM data derived variables: Country code COUNTRY data derived variables: Abbreviated country code DALIVE Recurrent stroke within 14 days: Discharged alive hospital DALIVED Recurrent stroke within 14 days: Date Discharged alive hospital DAP Data collected 14 day/discharge form treatments given hospital: Non trial antiplatelet drug (Y/N) DASP14 Data collected 14 day/discharge form treatments given hospital: Aspirin given 14 days till death discharge (Y/N) DASPLT Data collected 14 day/discharge form treatments given hospital: Discharged long term aspirin (Y/N) DAYLOCAL Randomisation data: Estimate local day week (assuming RDATE Oxford) DCAA Data collected 14 day/discharge form treatments given hospital: Calcium antagonists (Y/N) DCAREND Data collected 14 day/discharge form treatments given hospital: Carotid surgery (Y/N) DDEAD events within 14 days: events within 14 days: Dead discharge form DDEADC events within 14 days: Cause death (1-Initial stroke/2-Recurrent stroke (ischaemic unknown /3-Recurrent stroke (haemorrhagic)/4-Pneumonia /5-Coronary heart disease/6-Pulmonary embolism /7-vascular unknown/8-Non-vascular/0-unknown) DDEADD Date dead discharge form (yyyy/mm/dd); NOTE: death necessarily within 14 days randomisation DDEADX events within 14 days: Comment death DDIAGHA Final diagnosis initial event: Haemorrhagic stroke DDIAGISC Final diagnosis initial event: Ischaemic stroke DDIAGUN Final diagnosis initial event: Indeterminate stroke DEAD1 Indicator variables specific causes death: Initial stroke DEAD2 Indicator variables specific causes death: Reccurent ischaemic/unknown stroke DEAD3 Indicator variables specific causes death: Reccurent haemorrhagic stroke DEAD4 Indicator variables specific causes death: Pneumonia DEAD5 Indicator variables specific causes death: Coronary heart disease DEAD6 Indicator variables specific causes death: Pulmonary embolism DEAD7 Indicator variables specific causes death: vascular unknown DEAD8 Indicator variables specific causes death: Non vascular DGORM Data collected 14 day/discharge form treatments given hospital: Glycerol manitol (Y/N) DHAEMD Data collected 14 day/discharge form treatments given hospital: Haemodilution (Y/N) DHH14 Data collected 14 day/discharge form treatments given hospital: Medium dose heparin given 14 days etc pilot (combine ) DIED data derived variables: Indicator variable death (1=died; 0=die) DIVH Data collected 14 day/discharge form treatments given hospital: Non trial intravenous heparin (Y/N) DLH14 Data collected 14 day/discharge form treatments given hospital: Low dose heparin given 14 days till death/discharge (Y/N) DMAJNCH Data collected 14 day/discharge form treatments given hospital: Major non-cerebral haemorrhage (Y/N) DMAJNCHD Data collected 14 day/discharge form treatments given hospital: DMAJNCHX Data collected 14 day/discharge form treatments given hospital: DMH14 Data collected 14 day/discharge form treatments given hospital: Date Major non-cerebral haemorrhage (yyyy/mm/dd) DNOSTRK Final diagnosis initial event: stroke DNOSTRKX Final diagnosis initial event: Comment stroke DOAC Data collected 14 day/discharge form treatments given hospital: anticoagulants (Y/N) DPE events within 14 days: Pulmonary embolism DPED events within 14 days: Date Pulmonary embolism (yyyy/mm/dd) DPLACE events within 14 days: Discharge destination (-Home /B-Relatives home /C-Residential care /D-Nursing home /E-hospital departments /U-Unknown) DRSH Recurrent stroke within 14 days: Haemorrhagic stroke DRSHD Recurrent stroke within 14 days: Date Haemorrhagic stroke (yyyy/mm/dd) DRSISC Recurrent stroke within 14 days: Ischaemic recurrent stroke DRSISCD Recurrent stroke within 14 days: Date Ischaemic recurrent stroke (yyyy/mm/dd) DRSUNK Recurrent stroke within 14 days: Unknown type DRSUNKD Recurrent stroke within 14 days: Date Unknown type (yyyy/mm/dd) DSCH Data collected 14 day/discharge form treatments given hospital: Non trial subcutaneous heparin (Y/N) DSIDE Data collected 14 day/discharge form treatments given hospital: side effect (Y/N) DSIDED Data collected 14 day/discharge form treatments given hospital: Date side effect DSIDEX Data collected 14 day/discharge form treatments given hospital: Comment side effect DSTER Data collected 14 day/discharge form treatments given hospital: Steroids (Y/N) DTHROMB Data collected 14 day/discharge form treatments given hospital: Thrombolysis (Y/N) DVT14 Indicator variables specific causes death: Indicator deep vein thrombosis discharge form EXPD14 data derived variables: Predicted probability death 14 days EXPD6 data derived variables: Predicted probability death 6 month EXPDD data derived variables: Predicted probability death/dependence 6 month FAP Data collected 6 months: antiplatelet drugs FDEAD Data collected 6 months: Dead six month follow-(Y/N) FDEADC Data collected 6 months: Cause death (1-Initial stroke /2-Recurrent stroke (ischaemic unknown) /3-Recurrent stroke (haemorrhagic) /4-Pneumonia /5-Coronary heart disease /6-Pulmonary embolism /7-vascular unknown /8-Non-vascular /0-unknown) FDEADD Data collected 6 months: Date death; NOTE: death necessarily within 6 months randomisation FDEADX Data collected 6 months: Comment death FDENNIS Data collected 6 months: Dependent 6 month follow-(Y/N) FLASTD Data collected 6 months: Date last contact FOAC Data collected 6 months: anticoagulants FPLACE Data collected 6 months: Place residance 6 month follow-( -Home /B-Relatives home /C-Residential care /D-Nursing home /E-hospital departments /U-Unknown) FRECOVER Data collected 6 months: Fully recovered 6 month follow-(Y/N) FU1_COMP data derived variables: Date discharge form completed FU1_RECD data derived variables: Date discharge form received FU2_DONE data derived variables: Date 6 month follow-done H14 ndicator variables specific causes death: Cerebral bleed/heamorrhagic stroke within 14 days; slightly wider definition DRSH used analysis cerebral bleeds HOSPNUM Randomisation data: Hospital number HOURLOCAL Randomisation data: Local time – hours HTI14 Indicator variables specific causes death: Indicator haemorrhagic transformation within 14 days ID14 data derived variables: Indicator death 14 days ISC14 Indicator variables specific causes death: Indicator ischaemic stroke within 14 days MINLOCAL Randomisation data: Local time – minutes NCB14 Indicator variables specific causes death: Indicator non-cerebral bleed within 14 days NCCODE data derived variables: Coding compliance (see Table 3) doi:10.1186/1745-6215-13-24 NK14 Indicator variables specific causes death: Indicator indeterminate stroke within 14 days OCCODE data derived variables: Six month outcome ( 1-dead /2-dependent /3-recovered /4-recovered /8 9 – missing status ONDRUG Data collected 14 day/discharge form treatments given hospital: Estimate time days trial treatment PE14 Indicator variables specific causes death: Indicator pulmonary embolism within 14 days RASP3 Randomisation data: Aspirin within 3 days prior randomisation (Y/N) RATRIAL Randomisation data: Atrial fibrillation (Y/N); coded pilot phase - 984 patients RCONSC Randomisation data: Conscious state randomisation (F - fully alert, D - drowsy, U - unconscious) RCT Randomisation data: CT randomisation (Y/N) RDATE Randomisation data: Date randomisation RDEF1 Randomisation data: Face deficit (Y/N/C=assess) RDEF2 Randomisation data: Arm/hand deficit (Y/N/C=assess) RDEF3 Randomisation data: Leg/foot deficit (Y/N/C=assess) RDEF4 Randomisation data: Dysphasia (Y/N/C=assess) RDEF5 Randomisation data: Hemianopia (Y/N/C=assess) RDEF6 Randomisation data: Visuospatial disorder (Y/N/C=assess) RDEF7 Randomisation data: Brainstem/cerebellar signs (Y/N/C=assess) RDEF8 Randomisation data: deficit (Y/N/C=assess) RDELAY Randomisation data: Delay stroke randomisation hours RHEP24 Randomisation data: Heparin within 24 hours prior randomisation (Y/N) RSBP Randomisation data: Systolic blood pressure randomisation (mmHg) RSLEEP Randomisation data: Symptoms noted waking (Y/N) RVISINF Randomisation data: Infarct visible CT (Y/N) RXASP Randomisation data: Trial aspirin allocated (Y/N) RXHEP Randomisation data: Trial heparin allocated (M/L/N) \\[M coded H=high pilot\\] SET14D data derived variables: Know dead alive 14 days (1=Yes, 0=); necessarily mean know outcome 6 monts – see OCCODE SEX Randomisation data: M=male; F=female STRK14 Indicator variables specific causes death: Indicator stroke within 14 days STYPE Randomisation data: Stroke subtype (TACS/PACS/POCS/LACS/TD data derived variables: Time death censoring days TRAN14 Indicator variables specific causes death: Indicator major non-cerebral bleed within 14 days","code":""},{"path":"https://hehta.github.io/RESIDE/reference/IST.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"IST Dataset — IST","text":"Obtained Sandercock, Peter; Niewada, Maciej; Czlonkowska, Anna. (2011). International Stroke Trial database (version 2), [dataset]. University Edinburgh. Department Clinical Neurosciences. doi:10.7488/ds/104  ODC-licence","code":""},{"path":"https://hehta.github.io/RESIDE/reference/IST.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"IST Dataset — IST","text":"doi:10.7488/ds/104","code":""},{"path":"https://hehta.github.io/RESIDE/reference/IST.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"IST Dataset — IST","text":"Sandercock P et al. Peter.Sandercock@ed.ac.uk","code":""},{"path":"https://hehta.github.io/RESIDE/reference/RESIDE-package.html","id":null,"dir":"Reference","previous_headings":"","what":"RESIDE: Rapid Easy Synthesis to Inform Data Extraction — RESIDE-package","title":"RESIDE: Rapid Easy Synthesis to Inform Data Extraction — RESIDE-package","text":"R package allows data simulation marginal distibutions obtained Trusted Research Environments (TREs).","code":""},{"path":"https://hehta.github.io/RESIDE/reference/RESIDE-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"RESIDE: Rapid Easy Synthesis to Inform Data Extraction — RESIDE-package","text":"RESIDE Package","code":""},{"path":[]},{"path":"https://hehta.github.io/RESIDE/reference/RESIDE-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"RESIDE: Rapid Easy Synthesis to Inform Data Extraction — RESIDE-package","text":"Maintainer: Ryan Field ryan.field@glasgow.ac.uk (ORCID) Authors: David McAllister david.mcallister@glasgow.ac.uk (ORCID) contributors: Claudia Geue cladia.geue@glasgow.ac.uk (ORCID) [contributor]","code":""},{"path":"https://hehta.github.io/RESIDE/reference/export_marginal_distributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Marginal Distributions — export_marginal_distributions","title":"Export Marginal Distributions — export_marginal_distributions","text":"Export marginal distributions CSV files","code":""},{"path":"https://hehta.github.io/RESIDE/reference/export_marginal_distributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Marginal Distributions — export_marginal_distributions","text":"","code":"export_marginal_distributions(   x,   folder_path = \".\",   create_folder = FALSE,   force = FALSE )"},{"path":"https://hehta.github.io/RESIDE/reference/export_marginal_distributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Marginal Distributions — export_marginal_distributions","text":"x Object type RESIDE get_marginal_distributions() folder_path path folder save files, Default: '.' create_folder folder exist created, Default: FALSE force folder already contains marginal distribution files removed, Default: FALSE","code":""},{"path":"https://hehta.github.io/RESIDE/reference/export_marginal_distributions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Marginal Distributions — export_marginal_distributions","text":"Explicit Return","code":""},{"path":"https://hehta.github.io/RESIDE/reference/export_marginal_distributions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export Marginal Distributions — export_marginal_distributions","text":"Exports marginal distributions CSV files within given folder, along continuous quantiles.","code":""},{"path":[]},{"path":"https://hehta.github.io/RESIDE/reference/export_marginal_distributions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export Marginal Distributions — export_marginal_distributions","text":"","code":"if (FALSE) { # \\dontrun{ if(interactive()){    marginal_distributions <- get_marginal_distributions(IST)    export_marginal_distributions(marginal_distributions)  } } # }"},{"path":"https://hehta.github.io/RESIDE/reference/get_marginal_distributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Marginal Distributions for a given data frame — get_marginal_distributions","title":"Generate Marginal Distributions for a given data frame — get_marginal_distributions","text":"Generate Marginal Distibutions given data frame options specify variables use.","code":""},{"path":"https://hehta.github.io/RESIDE/reference/get_marginal_distributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Marginal Distributions for a given data frame — get_marginal_distributions","text":"","code":"get_marginal_distributions(   df,   variables = c(),   ignore_na = TRUE,   print = FALSE )"},{"path":"https://hehta.github.io/RESIDE/reference/get_marginal_distributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Marginal Distributions for a given data frame — get_marginal_distributions","text":"df Data frame get marginal distributions variables (Optional) variable (columns) select, Default: c() ignore_na Currently unuses, Default: TRUE print Whether print marginal distributions console, Default: FALSE","code":""},{"path":"https://hehta.github.io/RESIDE/reference/get_marginal_distributions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Marginal Distributions for a given data frame — get_marginal_distributions","text":"list marginal distributions S3 RESIDE Class","code":""},{"path":"https://hehta.github.io/RESIDE/reference/get_marginal_distributions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Marginal Distributions for a given data frame — get_marginal_distributions","text":"function generate marginal distributions given data frame, depending variable type marginals differ, binary variables mean number missing generated continuous variables, first transformed mean sd transformed variables stored along quantile mapping back transformation. categorical variables, number category stored, missing values categorise \"missing\".","code":""},{"path":[]},{"path":"https://hehta.github.io/RESIDE/reference/get_marginal_distributions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Marginal Distributions for a given data frame — get_marginal_distributions","text":"","code":"if (FALSE) { # \\dontrun{ if(interactive()){    marginal_distributions <- get_marginal_distributions(      IST,      variables <- c(        \"SEX\",        \"AGE\",        \"ID14\",        \"RSBP\",        \"RATRIAL\"      )    )  } } # }"},{"path":"https://hehta.github.io/RESIDE/reference/import_marginal_distributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Marginal Distributions — import_marginal_distributions","title":"Import Marginal Distributions — import_marginal_distributions","text":"Import marginal distribution exported Trusted Research Environment (TRE)","code":""},{"path":"https://hehta.github.io/RESIDE/reference/import_marginal_distributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Marginal Distributions — import_marginal_distributions","text":"","code":"import_marginal_distributions(   folder_path = \".\",   binary_variables_file = \"\",   categorical_variables_file = \"\",   continuous_variables_file = \"\",   continuous_quantiles_file = \"\",   summary_file = \"summary.csv\" )"},{"path":"https://hehta.github.io/RESIDE/reference/import_marginal_distributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Marginal Distributions — import_marginal_distributions","text":"folder_path marginal distribution files located, Default: '.' see details. binary_variables_file filename binary_variables file, Default: ” see details. categorical_variables_file filename categorical variables file , Default: ” see details. continuous_variables_file filename continuous variables file, Default: ” see details. continuous_quantiles_file filename continuous quantiles file, Default: ” see details. summary_file filename summary file, Default: 'summary.csv' see details.","code":""},{"path":"https://hehta.github.io/RESIDE/reference/import_marginal_distributions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Marginal Distributions — import_marginal_distributions","text":"Returns object RESIDE class","code":""},{"path":"https://hehta.github.io/RESIDE/reference/import_marginal_distributions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import Marginal Distributions — import_marginal_distributions","text":"function import marginal distributions generated within Trusted Research Environment (TRE) using function export_marginal_distributions(), folder_path allows path files provided TRE imported, default current working directory. file parameters provide default file names filenames specified.","code":""},{"path":[]},{"path":"https://hehta.github.io/RESIDE/reference/import_marginal_distributions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Marginal Distributions — import_marginal_distributions","text":"","code":"if (FALSE) { # \\dontrun{ if(interactive()){    marginals <- import_marginal_distributions()  } } # }"},{"path":"https://hehta.github.io/RESIDE/reference/print.RESIDE.html","id":null,"dir":"Reference","previous_headings":"","what":"print.RESIDE — print.RESIDE","title":"print.RESIDE — print.RESIDE","text":"S3 override print RESIDE","code":""},{"path":"https://hehta.github.io/RESIDE/reference/print.RESIDE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print.RESIDE — print.RESIDE","text":"","code":"# S3 method for class 'RESIDE' print(x, ...)"},{"path":"https://hehta.github.io/RESIDE/reference/print.RESIDE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print.RESIDE — print.RESIDE","text":"x object class RESIDE ... parameters currently none used","code":""},{"path":"https://hehta.github.io/RESIDE/reference/print.RESIDE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"print.RESIDE — print.RESIDE","text":"S3 Override RESIDE Class","code":""},{"path":"https://hehta.github.io/RESIDE/reference/print.RESIDE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"print.RESIDE — print.RESIDE","text":"","code":"if (FALSE) { # \\dontrun{ if(interactive()){    print(      marginal_distributions <- get_marginal_distributions(        IST,        variables <- c(          \"SEX\",          \"AGE\",          \"ID14\",          \"RSBP\",          \"RATRIAL\"        )      )    )  } } # }"},{"path":"https://hehta.github.io/RESIDE/reference/synthesise_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthesise data from marginal distributions — synthesise_data","title":"Synthesise data from marginal distributions — synthesise_data","text":"Allows synthesis data marginal distributions obtained Trusted Research Environment (TRE)","code":""},{"path":"https://hehta.github.io/RESIDE/reference/synthesise_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthesise data from marginal distributions — synthesise_data","text":"","code":"synthesise_data(marginals, covariance_matrix = NULL, ...)  synthesize_data(marginals, covariance_matrix = NULL, ...)"},{"path":"https://hehta.github.io/RESIDE/reference/synthesise_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Synthesise data from marginal distributions — synthesise_data","text":"marginals object class RESIDE covariance_matrix Covariance Matrix yet implemented, Default: NULL ... Additional parameters currently none used.","code":""},{"path":"https://hehta.github.io/RESIDE/reference/synthesise_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Synthesise data from marginal distributions — synthesise_data","text":"data frame simulated data","code":""},{"path":"https://hehta.github.io/RESIDE/reference/synthesise_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthesise data from marginal distributions — synthesise_data","text":"DETAILS","code":""},{"path":[]},{"path":"https://hehta.github.io/RESIDE/reference/synthesise_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthesise data from marginal distributions — synthesise_data","text":"","code":"if (FALSE) { # \\dontrun{ if(interactive()){    marginals <- get_marginal_distributions(IST)    df <- synthesise_data(marginals)  } } # }"}]
